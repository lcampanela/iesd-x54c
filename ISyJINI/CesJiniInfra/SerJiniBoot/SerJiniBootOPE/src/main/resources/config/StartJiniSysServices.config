/* Configuration file for starting non-secure Jini Services */

import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import java.io.File;
import org.mdeos.jini.helper.ConfigureJiniFramework;

com.sun.jini.start {

    //MDEOS JINI RUNTINE
    private static group = "${user.name}";
    //private static jini_base_dir = "${user.home}/.jini";
    private static jini_base_dir = System.getProperty("user.home") + "/.jini";
    private static httpd_base_dir = jini_base_dir + "/www";
    private static hostIpAddress = ConfigureJiniFramework.getIpv4NonLoopbackAddress();
    private static _codebase = "http://" + hostIpAddress + "/:8080/classes/";
    private static _classpath = httpd_base_dir + "/classes/";

    //
    // HTTPD Service
    //
    private static httpd_codebase = "";
    private static httpd_policy = jini_base_dir + "/config/httpd.policy";
    private static httpd_classpath = "";
    private static httpd_impl = "com.sun.jini.tool.ClassServer";
    private static httpd_service =  new NonActivatableServiceDescriptor(
    		httpd_codebase, 
    		httpd_policy, 
    		httpd_classpath, 
    		httpd_impl,
    		new String[] {
    			"-port", "8080", 
    			"-dir", httpd_base_dir, 
    			"-verbose"
    		}
    );
	   
    //	   
    // Reggie (Lookup Service)
    //
    private static reggie_codebase = "";
    private static reggie_policy = jini_base_dir + "/config/reggie.policy";
    private static reggie_classpath = "";
    private static reggie_impl = "com.sun.jini.reggie.TransientRegistrarImpl";
    private static reggie_config = jini_base_dir + "/config/jrmp-reggie.config";
    private static reggie_service =  new NonActivatableServiceDescriptor(
	    	reggie_codebase, 
	    	reggie_policy, 
	    	reggie_classpath,
	    	reggie_impl,
	    	new String[] { 
	    		reggie_config
	    	}
	);
	   
    //
    // Mahalo (Transaction Manager Service)
    //
    private static mahalo_codebase = "";
    private static mahalo_policy = jini_base_dir + "/config/mahalo.policy";
    private static mahalo_classpath = "";
    private static mahalo_impl = "com.sun.jini.mahalo.TransientMahaloImpl";
    private static mahalo_config = jini_base_dir + "/config/jrmp-mahalo.config";
    private static mahalo_service =  new NonActivatableServiceDescriptor(
	    	mahalo_codebase, 
	    	mahalo_policy, 
	    	mahalo_classpath,
	    	mahalo_impl,
	    	new String[] { 
	    		mahalo_config
	    	}
	);
	
    //
    // Outrigger (Java Spaces Service)
    //
    private static outrigger_codebase = "";
    private static outrigger_policy = jini_base_dir + "/config/outrigger.policy";
    private static outrigger_classpath = "";
    private static outrigger_impl = "com.sun.jini.outrigger.PersistentOutriggerImpl";
    private static outrigger_config = jini_base_dir + "/config/jrmp-outrigger.config";
    private static outrigger_service =  new NonActivatableServiceDescriptor(
	    	outrigger_codebase, 
	    	outrigger_policy, 
	    	outrigger_classpath,
	    	outrigger_impl,
	    	new String[] { 
	    		outrigger_config
	    	}
	);

    //	   
    // Norm (Lease Renewal Service)
    //
    private static norm_codebase = "";
    private static norm_policy = jini_base_dir + "/config/norm.policy";
    private static norm_classpath = "";
    private static norm_impl = "com.sun.jini.norm.PersistentNormServerImpl";
    private static norm_config = jini_base_dir + "/config/jrmp-norm.config";
    private static norm_service =  new NonActivatableServiceDescriptor(
	    	norm_codebase, 
	    	norm_policy, 
	    	norm_classpath,
	    	norm_impl,
	    	new String[] { 
	    		norm_config
	    	}
	);


    //     
    // Fiddler (Lookup Discovery Service)
    //
    private static fiddler_codebase = "";
    private static fiddler_policy = jini_base_dir + "/config/fiddler.policy";
    private static fiddler_classpath = "";
    private static fiddler_config = jini_base_dir + "/config/jrmp-fiddler.config";
    private static fiddler_impl = "com.sun.jini.fiddler.TransientFiddlerImpl";
    private static fiddler_service = 
        new NonActivatableServiceDescriptor(
            fiddler_codebase, fiddler_policy, fiddler_classpath, 
            fiddler_impl, new String[] { fiddler_config });

    //     
    // Mercury (Event Mailbox Service)
    //
    private static mercury_codebase = "";
    private static mercury_policy = jini_base_dir + "/config/mercury.policy";
    private static mercury_classpath = "";
    private static mercury_config = jini_base_dir + "/config/jrmp-mercury.config";
    private static mercury_impl = "com.sun.jini.mercury.TransientMercuryImpl";
    private static mercury_service = 
        new NonActivatableServiceDescriptor(
            mercury_codebase, mercury_policy, mercury_classpath, 
            mercury_impl, new String[] { mercury_config });
	
    //
    // Services
    //
    static serviceDescriptors = new ServiceDescriptor[] {
        httpd_service,
        reggie_service,
        mahalo_service,
        outrigger_service
        /* ,
        norm_service,
        fiddler_service,
        mercury_service */
    };

}//end com.sun.jini.start

